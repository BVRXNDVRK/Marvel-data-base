{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/errorBoundary/ErrorBoundary.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","className","href","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","MarvelService","_apiBase","_apiKey","_baseOffset","getResource","url","fetch","res","ok","Error","status","json","getAllCharacters","a","offset","data","results","map","_transformCharacter","getCharacter","id","char","descr","description","length","slice","name","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomChar","state","loading","error","marvelService","onCharLoaded","setState","onCharLoading","onError","updateChar","Math","floor","random","then","catch","onRandomCharClick","e","preventDefault","this","errorMessage","spinner","content","onClick","mjolnir","Component","View","CharList","charList","newitemsLoading","charEnded","itemRefs","onRequest","onCharListLoading","onCharListLoaded","newCharList","ended","onCharClick","charId","props","onCharSelected","setRef","ref","push","focusOnItem","forEach","item","classList","remove","add","focus","renderItems","arr","i","imgStyle","tabIndex","onKeyPress","key","disabled","Skeleton","CharInfo","marvelServise","MarvelServise","prevProps","skeleton","splice","ErrorBoundary","errorInfo","children","App","selectedChar","decoration","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.184ed3d0.chunk.js","sourcesContent":["import './appHeader.scss';\r\n\r\nconst AppHeader = () => {\r\n    return (\r\n        <header className=\"app__header\">\r\n            <h1 className=\"app__title\">\r\n                <a href=\"#\">\r\n                    <span>Marvel</span> information portal\r\n                </a>\r\n            </h1>\r\n            <nav className=\"app__menu\">\r\n                <ul>\r\n                    <li><a href=\"#\">Characters</a></li>\r\n                    /\r\n                    <li><a href=\"#\">Comics</a></li>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","const Spinner = () => {\r\n    return (\r\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n            <g transform=\"translate(80,50)\">\r\n            <g transform=\"rotate(0)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\r\n            <g transform=\"rotate(45)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(50,80)\">\r\n            <g transform=\"rotate(90)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\r\n            <g transform=\"rotate(135)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(20,50.00000000000001)\">\r\n            <g transform=\"rotate(180)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\r\n            <g transform=\"rotate(225)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(49.99999999999999,20)\">\r\n            <g transform=\"rotate(270)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\r\n            <g transform=\"rotate(315)\">\r\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\r\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\r\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\r\n            </circle>\r\n            </g>\r\n            </g>\r\n        </svg>\r\n    )\r\n}\r\n\r\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\r\n\r\nconst ErrorMessage = () => {\r\n    return (\r\n        <img style={{ display: \"block\", width: \"250px\", height: \"250px\", objectFit: \"contain\", margin: \"0 auto\" }} src={img} alt=\"Error img\"/>\r\n    )\r\n}\r\n\r\nexport default ErrorMessage;","\r\n\r\nclass MarvelService {\r\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/';\r\n    _apiKey = 'apikey=3c1882048fcfada973c9af7f9092e203';\r\n    _baseOffset = '210';\r\n\r\n    getResource = async (url) => {\r\n        let res = await fetch(url);\r\n\r\n        if (!res.ok) {\r\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`)\r\n        }\r\n\r\n        return await res.json();\r\n    }\r\n \r\n    getAllCharacters = async (offset = this._baseOffset) => {\r\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`);\r\n        return res.data.results.map(this._transformCharacter);\r\n    }\r\n\r\n    getCharacter = async (id) => {\r\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`);\r\n        return this._transformCharacter(res.data.results[0]);\r\n    }\r\n\r\n    _transformCharacter = (char) => {\r\n        let descr = '';\r\n\r\n        if (char.description.length === 0) {\r\n            descr = 'Sorry, there is no character description =(';\r\n        } else if (char.description.length > 216) {\r\n            descr = `${char.description.slice(0, 213)} ...`;\r\n        } else {\r\n            descr = char.description;\r\n        }\r\n\r\n        return {\r\n            id: char.id,\r\n            name: char.name,\r\n            description: descr,\r\n            thumbnail: char.thumbnail.path + '.' + char.thumbnail.extension,\r\n            homepage: char.urls[0].url,\r\n            wiki: char.urls[1].url,\r\n            comics: char.comics.items\r\n        }\r\n    }\r\n}\r\n\r\nexport default MarvelService;","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import {Component} from 'react';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport MarvelService from '../../services/MarvelService'\r\nimport './randomChar.scss';\r\nimport mjolnir from '../../resources/img/mjolnir.png';\r\n\r\nclass RandomChar extends Component {\r\n\r\n    state = {\r\n        char: {},\r\n        loading: true,\r\n        error: false\r\n    }\r\n    \r\n    marvelService = new MarvelService();\r\n\r\n    componentDidMount() {\r\n        this.updateChar();\r\n        // this.timerId = setInterval(this.updateChar, 10000);\r\n    }\r\n\r\n    // componentWillUnmount() {\r\n    //     clearInterval(this.timerId);\r\n    // }\r\n\r\n    onCharLoaded = (char) => {\r\n        this.setState({\r\n            char, \r\n            loading: false\r\n        })\r\n    }\r\n\r\n    onCharLoading = () => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            loading: false,\r\n            error: true\r\n        })\r\n    }\r\n\r\n    updateChar = () => {\r\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000);\r\n        this.onCharLoading();\r\n        this.marvelService\r\n        .getCharacter(id)\r\n        .then(this.onCharLoaded)\r\n        .catch(this.onError); \r\n    }\r\n\r\n    onRandomCharClick = (e) => {\r\n        e.preventDefault();\r\n        this.updateChar();\r\n    }\r\n    \r\n    render() {\r\n        const {char, loading, error} = this.state;\r\n        const errorMessage = error ? <ErrorMessage/> : null;\r\n        const spinner = loading ? <Spinner/> : null;\r\n        const content = !(loading || error) ? <View char={char}/> : null;\r\n\r\n        return (\r\n            <div className=\"randomchar\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n                <div className=\"randomchar__static\">\r\n                    <p className=\"randomchar__title\">\r\n                        Random character for today!<br/>\r\n                        Do you want to get to know him better?\r\n                    </p>\r\n                    <p className=\"randomchar__title\">\r\n                        Or choose another one\r\n                    </p>\r\n                    <button className=\"button button__main\"\r\n                            onClick={this.onRandomCharClick}>\r\n                        <div className=\"inner\">try it</div>\r\n                    </button>\r\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\"/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, thumbnail, homepage, wiki} = char;\r\n\r\n    return (\r\n        <div className=\"randomchar__block\">\r\n            <img style={{objectFit: `${(thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') ? 'fill' : 'cover'}` }} src={thumbnail} alt=\"Random character\" className=\"randomchar__img\"/>\r\n            <div className=\"randomchar__info\">\r\n                <p className=\"randomchar__name\">{name}</p>\r\n                <p className=\"randomchar__descr\">\r\n                    {description}\r\n                </p>\r\n                <div className=\"randomchar__btns\">\r\n                    <a href={homepage} className=\"button button__main\">\r\n                        <div className=\"inner\">homepage</div>\r\n                    </a>\r\n                    <a href={wiki} className=\"button button__secondary\">\r\n                        <div className=\"inner\">Wiki</div>\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default RandomChar;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport MarvelService from '../../services/MarvelService';\r\nimport './charList.scss';\r\n\r\nclass CharList extends Component {\r\n\r\n    state = {\r\n        charList: [],\r\n        loading: true,\r\n        error: false,\r\n        newitemsLoading: false,\r\n        offset: 210,\r\n        charEnded: false,\r\n    }\r\n\r\n    itemRefs = [];\r\n\r\n    marvelService = new MarvelService();\r\n\r\n    componentDidMount() {\r\n        this.onRequest();\r\n    }\r\n\r\n    onRequest = (offset) => {\r\n        this.onCharListLoading();\r\n        this.marvelService\r\n            .getAllCharacters(offset)\r\n            .then(this.onCharListLoaded)\r\n            .catch(this.onError);\r\n    }\r\n\r\n    onCharListLoading = () => {\r\n        this.setState({newitemsLoading: true})\r\n    }\r\n\r\n    onCharListLoaded = (newCharList) => {\r\n        let ended = false;\r\n        if(newCharList.length < 9) {\r\n            ended = true;\r\n        }\r\n\r\n\r\n        this.setState(({charList, offset}) => (\r\n            {\r\n                charList: [...charList, ...newCharList],\r\n                loading: false,\r\n                newitemsLoading: false,\r\n                offset: offset + 9,\r\n                charEnded: ended\r\n            }\r\n        ));\r\n        \r\n    }\r\n\r\n    onCharClick = (charId) => {\r\n        this.props.onCharSelected(charId);\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            loading: false,\r\n            error: true\r\n        })\r\n    }\r\n\r\n    setRef = (ref) => {\r\n        this.itemRefs.push(ref);\r\n    }\r\n\r\n    focusOnItem = (id) => {\r\n        this.itemRefs.forEach(item => item.classList.remove('char__item_selected'));\r\n        this.itemRefs[id].classList.add('char__item_selected');\r\n        this.itemRefs[id].focus();\r\n    }\r\n\r\n\r\n    renderItems = (arr) => {\r\n        const items = arr.map((item, i) => {\r\n            let imgStyle = {'objectFit': 'cover'}\r\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\r\n                imgStyle = {'objectFit': 'unset'}\r\n            }\r\n\r\n            return (\r\n                <li className=\"char__item\"\r\n                    tabIndex={0}\r\n                    key={item.id}\r\n                    ref={this.setRef} \r\n                    onClick={() => {\r\n                        this.onCharClick(item.id)\r\n                        this.focusOnItem(i);\r\n                    }}\r\n                    onKeyPress={(e) => {\r\n                        if (e.key === ' ' || e.key === \"Enter\") {\r\n                            this.props.onCharSelected(item.id);\r\n                            this.focusOnItem(i);\r\n                        }\r\n                    }}>\r\n                        <img src={item.thumbnail} alt={`${item.name} photo`} style={imgStyle}/>\r\n                        <div className=\"char__name\">{item.name}</div>\r\n                </li>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <ul className=\"char__grid\">\r\n                {items}    \r\n            </ul>\r\n        )\r\n    }\r\n\r\n    render() {\r\n        const {charList, loading, error, offset, newitemsLoading, charEnded} = this.state,\r\n              items = this.renderItems(charList),\r\n              spinner = loading ? <Spinner/> : null,\r\n              errorMessage =  error ? <ErrorMessage/> : null,\r\n              content = !(loading || error) ? items : null;\r\n\r\n        return (\r\n            <div className=\"char__list\">\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n                <button \r\n                className=\"button button__main button__long\"\r\n                disabled={newitemsLoading}\r\n                style={{'display': charEnded ? 'none' : 'block'}}\r\n                onClick={() => this.onRequest(offset)}>\r\n                    <div className=\"inner\">load more</div>\r\n                </button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nCharList.propTypes = {\r\n    onCharSelected: PropTypes.func\r\n}\r\n\r\nexport default CharList;","import './skeleton.scss';\r\n\r\nconst Skeleton = () => {\r\n    return (\r\n        <>\r\n            <p className=\"char__select\">Please select a character to see information</p>\r\n            <div className=\"skeleton\">\r\n                <div className=\"pulse skeleton__header\">\r\n                    <div className=\"pulse skeleton__circle\"></div>\r\n                    <div className=\"pulse skeleton__mini\"></div>\r\n                </div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n                <div className=\"pulse skeleton__block\"></div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Skeleton;","import {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\nimport Skeleton from '../skeleton/Skeleton'\r\nimport MarvelServise from '../../services/MarvelService';\r\nimport './charInfo.scss';\r\n\r\nclass CharInfo extends Component {\r\n\r\n    state = {\r\n        char: null,\r\n        loading: false,\r\n        error: false\r\n    }\r\n\r\n    marvelServise = new MarvelServise();\r\n    \r\n    componentDidMount() {\r\n        this.updateChar();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.charId !== prevProps.charId) {\r\n            this.updateChar();\r\n        }\r\n    }\r\n\r\n    updateChar = () => {\r\n        const {charId} = this.props;\r\n        if (!charId) {\r\n            return;\r\n        }\r\n\r\n        this.onCharLoading();\r\n        this.marvelServise\r\n            .getCharacter(charId)\r\n            .then(this.onCharLoaded)\r\n            .catch(this.onError);\r\n    }\r\n\r\n    onCharLoaded = (char) => {\r\n        this.setState({\r\n            char, \r\n            loading: false\r\n        })\r\n    }\r\n\r\n    onCharLoading = () => {\r\n        this.setState({\r\n            loading: true\r\n        })\r\n    }\r\n\r\n    onError = () => {\r\n        this.setState({\r\n            loading: false,\r\n            error: true\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {char, loading, error} = this.state,\r\n              skeleton = char || loading || error ? null : <Skeleton/>,\r\n              errorMessage =  error ? <ErrorMessage/> : null,\r\n              spinner =  loading ? <Spinner/> : null,\r\n              content =  !(error || loading || !char) ? <View char={char}/> : null;\r\n\r\n        return (\r\n            <div className=\"char__info\">\r\n                {skeleton}\r\n                {errorMessage}\r\n                {spinner}\r\n                {content}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst View = ({char}) => {\r\n    const {name, description, thumbnail, homepage, wiki, comics} = char;  \r\n\r\n    const renderComics = () => {\r\n        if (comics.length === 0) {\r\n            return 'Sorry, there are no comics with this character =('\r\n        } else {\r\n            return (\r\n                comics.map((item, i) => {\r\n                    return (\r\n                        <li key={i} className=\"char__comics-item\">\r\n                            {item.name}\r\n                        </li>\r\n                    )\r\n                }).splice(0, 10)\r\n            )\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"char__basics\">\r\n                <img style={{objectFit: `${(thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') ? 'fill' : 'cover'}` }} src={thumbnail} alt={name}/>\r\n                <div>\r\n                    <div className=\"char__info-name\">{name}</div>\r\n                    <div className=\"char__btns\">\r\n                        <a href={homepage} className=\"button button__main\">\r\n                            <div className=\"inner\">homepage</div>\r\n                        </a>\r\n                        <a href={wiki}className=\"button button__secondary\">\r\n                            <div className=\"inner\">Wiki</div>\r\n                        </a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"char__descr\">\r\n                {description}\r\n            </div>\r\n            <div className=\"char__comics\">Comics:</div>\r\n            <ul className=\"char__comics-list\">\r\n                {renderComics()}\r\n            </ul>\r\n        </>\r\n    )\r\n}\r\n\r\nCharInfo.propTypes = {\r\n    charId: PropTypes.number\r\n}\r\n\r\nexport default CharInfo;","import {Component} from 'react';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nclass ErrorBoundary extends Component {\r\n    state = {\r\n        error: false\r\n    }\r\n\r\n    componentDidCatch(error, errorInfo) {\r\n        this.setState({error: true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.error) {\r\n            return <ErrorMessage/>\r\n        }\r\n\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import {Component} from 'react';\r\nimport AppHeader from \"../appHeader/AppHeader\";\r\nimport RandomChar from \"../randomChar/RandomChar\";\r\nimport CharList from \"../charList/CharList\";\r\nimport CharInfo from \"../charInfo/CharInfo\";\r\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary';\r\nimport decoration from '../../resources/img/vision.png';\r\n\r\nclass App extends Component {\r\n    state = {\r\n        selectedChar: null\r\n    }\r\n\r\n    onCharSelected = (id) => {\r\n        this.setState({\r\n            selectedChar: id\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app\">\r\n                <AppHeader/>\r\n                <main>\r\n                    <ErrorBoundary>\r\n                        <RandomChar/>   \r\n                    </ErrorBoundary>\r\n                    <div className=\"char__content\">\r\n                        <ErrorBoundary>\r\n                            <CharList onCharSelected={this.onCharSelected} charId={this.state.selectedChar}/>\r\n                        </ErrorBoundary>\r\n                        <ErrorBoundary>\r\n                            <CharInfo charId={this.state.selectedChar}/>\r\n                        </ErrorBoundary>\r\n                    </div>\r\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\"/>\r\n                </main>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/app/App';\r\nimport './style/style.scss';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}